{"per_page":10,"total":7,"current":3,"data":[{"title":"easycore多GPU并行加速","date":"2020-03-03T20:04:55.000Z","thumbnail":"easycore-parallel-multi-gpu/python.jpg","excerpt":"<p>本文介绍如何使用easycore进行多GPU并行加速。</p>","link":"easycore-parallel-multi-gpu","tags":["easycore","multiprocessing","python","pytorch"],"categories":["tools"]},{"title":"发布第一个python包到PyPI","date":"2020-03-01T15:04:41.000Z","thumbnail":"publish-first-python-package-to-pypi/logo.png","excerpt":"<p>本文介绍如何将python包发布到PyPI上。</p>","link":"publish-first-python-package-to-pypi","tags":["python"],"categories":["tools"]},{"title":"python多进程及pytorch多GPU并行推断","date":"2020-02-28T20:30:16.000Z","thumbnail":"python-multi-gpu-multiprocessing/python.jpg","excerpt":"<p>本文通过案例介绍我使用python自带的<code>multiprocessing</code>库进行多GPU并行推断的方案。</p>","link":"python-multi-gpu-multiprocessing","tags":["multiprocessing","python","pytorch"],"categories":["machine-learning"]},{"title":"使用manim制作数学动画","date":"2020-02-14T15:52:55.000Z","thumbnail":"manim/manim-logo.png","excerpt":"<p>本文介绍如何使用manim制作动画。</p>","link":"manim","tags":["animation","python"],"categories":["tools"]},{"title":"linux上安装docker CE","date":"2020-01-17T21:39:02.000Z","thumbnail":"docker-linux-install/logo.jpg","excerpt":"<p>本文介绍在linux系统上安装docker CE，官方手册见<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu\" target=\"_blank\" rel=\"noopener\">此处</a>。</p>","link":"docker-linux-install","tags":["docker"],"categories":["tools"]},{"title":"frp内网穿透基本使用","date":"2020-01-17T21:06:04.000Z","thumbnail":"frp-basic/architecture.png","excerpt":"<p>每次回家连不上学校内网，就没法连接实验室的服务器做实验，有什么办法解决呢？内网穿透是解决这一问题的方法之一。</p>\n<p>本文介绍 frp 内网穿透工具的基础使用，仅涉及 frp 的 ssh 访问功能，更多功能见<a href=\"https://github.com/fatedier/frp\" target=\"_blank\" rel=\"noopener\">官方仓库</a>。</p>","link":"frp-basic","tags":["frp"],"categories":["tools"]},{"title":"Ubuntu上从CUDA开始构建深度学习镜像","date":"2020-01-14T15:53:47.000Z","thumbnail":"create-deep-learning-docker-image-in-ubuntu/nvidia-docker-logo.png","excerpt":"<p>本文介绍如何在ubuntu上从CUDA镜像开始构建深度学习镜像。</p>","link":"create-deep-learning-docker-image-in-ubuntu","tags":["docker","pytorch"],"categories":["linux"]},{"title":"python的奇妙技巧","date":"2020-01-12T14:47:26.000Z","thumbnail":"python-skill/python.jpg","excerpt":"<p>本文记录平时阅读大牛的python项目代码时看到的一些奇妙的技巧， 同时也记录一些常用(boring)的技巧，持续更新中…</p>\n<p>本文涉及的技巧除了纯python的技巧，还包含以下常用python库的技巧：</p>\n<ul>\n<li>numpy</li>\n<li>pytorch</li>\n<li>multiprocessing</li>\n</ul>","link":"python-skill","tags":["numpy","python","pytorch"],"categories":["programming-language"]},{"title":"PASCAL VOC 数据集格式","date":"2020-01-07T15:18:30.000Z","thumbnail":"pascal-voc-dataset-format/pascal-logo.png","excerpt":"<p>本文介绍 PASCAL VOC 数据集的标注格式。</p>\n<ul>\n<li><p>PASCAL的全称是Pattern Analysis, Statistical Modelling and Computational Learning</p>\n</li>\n<li><p>VOC的全称是Visual Object Classes</p>\n</li>\n</ul>\n<p>详细的官方说明见<a href=\"http://host.robots.ox.ac.uk/pascal/VOC/\" target=\"_blank\" rel=\"noopener\">此处</a>。</p>","link":"pascal-voc-dataset-format","tags":["dataset"],"categories":["machine-learning"]},{"title":"COCO数据集格式","date":"2020-01-07T13:33:56.000Z","thumbnail":"coco-dataset-format/coco-logo.png","excerpt":"<p>本文介绍COCO数据集的标注格式。</p>\n<p>COCO 全称为Common Objects in Context，是微软团队提供的一个可以用来进行图像识别的数据集。</p>\n<p>COCO数据集目前有3种标注类型：</p>\n<ul>\n<li>object instances (目标实例)</li>\n<li>object keypoints (目标上的关键点)</li>\n<li>image captions (看图说话)</li>\n</ul>\n<p>COCO 数据集的信息采用JSON文件存储。</p>","link":"coco-dataset-format","tags":["dataset"],"categories":["machine-learning"]}]}