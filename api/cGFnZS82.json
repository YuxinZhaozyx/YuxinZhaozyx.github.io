{"per_page":10,"total":7,"current":6,"data":[{"title":"[PyTorch学习笔记] 数据的加载和预处理","date":"2019-07-23T17:20:42.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>PyTorch通过torch.utils.data对一般常用的数据加载进行了封装，可以很容易地实现多线程数据预读和批量加载。 并且torchvision已经预先实现了常用图像数据集，包括CIFAR-10，ImageNet、COCO、MNIST、LSUN等数据集，可通过torchvision.datasets方便地调用</p>","link":"pytorch-learning-note-6","tags":["pytorch"],"categories":["machine-learning"]},{"title":"[PyTorch学习笔记] Data Parallelism","date":"2019-07-23T11:10:54.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>本文是PyTorch官方教程 [DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ] Data Parallelism 的学习笔记</p>\n<p>本文将学习如何使用 <code>DataParallel</code> 来使用多GPU。</p>","link":"pytorch-learning-note-5","tags":["pytorch"],"categories":["machine-learning"]},{"title":"[PyTorch学习笔记] Training A Classifier","date":"2019-07-23T09:40:02.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>本文是PyTorch官方教程 [DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ] Training A Classifier 的学习笔记</p>","link":"pytorch-learning-note-4","tags":["pytorch"],"categories":["machine-learning"]},{"title":"[PyTorch学习笔记] Neural Networks","date":"2019-07-22T20:48:56.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>本文是PyTorch官方教程 [DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ] Neural Networks 的学习笔记</p>\n<p>使用torch.nn包来构建神经网络。</p>\n<p><code>nn</code>包依赖<code>autograd</code>包来定义模型并求导。 一个<code>nn.Module</code>包含各个层和一个<code>forward(input)</code>方法，该方法返回<code>output</code>。</p>\n<p><img src=\"pytorch-learning-note-3/68747470733a2f2f7079746f7263682e6f72672f7475746f7269616c732f5f696d616765732f6d6e6973742e706e67.png\" alt=\"img\" class=\"article-img\"></p>\n<p>它是一个简单的前馈神经网络，它接受一个输入，然后一层接着一层地传递，最后输出计算的结果。</p>\n<p>神经网络的典型训练过程如下：</p>\n<ol>\n<li>定义包含一些可学习的参数(或者叫权重)神经网络模型；</li>\n<li>在数据集上迭代；</li>\n<li>通过神经网络处理输入；</li>\n<li>计算损失(输出结果和正确值的差值大小)；</li>\n<li>将梯度反向传播回网络的参数；</li>\n<li>更新网络的参数，主要使用如下简单的更新原则： <code>weight = weight - learning_rate * gradient</code></li>\n</ol>","link":"pytorch-learning-note-3","tags":["pytorch"],"categories":["machine-learning"]},{"title":"[PyTorch学习笔记] AUTOGRAD: Automatic Differentiation","date":"2019-07-22T19:20:28.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>本文是PyTorch官方教程 [DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ] AUTOGRAD: Automatic Differentiation 的学习笔记</p>","link":"pytorch-learning-note-2","tags":["pytorch"],"categories":["machine-learning"]},{"title":"[PyTorch学习笔记] What is PyTorch?","date":"2019-07-22T18:11:52.000Z","thumbnail":"/static/image/pytorch.png","excerpt":"<p>本文是PyTorch官方教程 [DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ] What is PyTorch? 的学习笔记</p>","link":"pytorch-learning-note-1","tags":["pytorch"],"categories":["machine-learning"]},{"title":"Windows PATH 长度限制最多2047个字符","date":"2019-07-20T09:53:59.000Z","excerpt":"<p><img src=\"windows-path-limited-length/featured.png\" alt=\"featured\" class=\"article-img\"></p>\n<p>最近使用windows安装一些软件的过程中，出现了环境变量PATH最长限制2047个字符的问题。所幸我习惯下载软件的zip包，自己解压后再将其添加到环境变量中，因此才能及时发现这个问题。用安装包安装可能还不会提示这个问题，出情况也就比较难去定位问题了。</p>","link":"windows-path-limited-length","tags":["error","path"],"categories":["windows"]},{"title":"[论文笔记] R-C3D: Region Convolutional 3D Network for Temporal Activity Detection","date":"2019-07-17T18:44:03.000Z","excerpt":"<p><img src=\"r-c3d/featured.png\" alt=\"featured\" class=\"article-img\"></p>\n<p>作者提出了R-C3D模型用于连续视频的行为检测(Activity Detection in Continuous Videos)。连续视频的行为检测需要完成两个目标：</p>\n<ol>\n<li>识别出行为的类别</li>\n<li>定位行为发生的时间范围</li>\n</ol>\n<p>这两个问题正是R-C3D着力解决的。</p>","link":"r-c3d","tags":["activity-detection"],"categories":["paper-note"]},{"title":"NMS / soft-NMS / softer-NMS","date":"2019-07-17T14:12:08.000Z","excerpt":"<p>目标检测算法包含了三个要素：Backbone + Head + Postprocess，对于Postprocess部分，最早用的是NMS，后面出现了Soft NMS和Softer NMS，本文将分别解释它们的动机和原理。</p>","link":"nms","tags":["NMS","metric","soft-NMS","softer-NMS"],"categories":["machine-learning"]},{"title":"PR/ROC曲线及其相关性能评价指标","date":"2019-07-15T21:05:58.000Z","excerpt":"<p>在分类模型的评价标准中，PR曲线和ROC曲线被广泛应用于模型的性能评估。本文对PR曲线和ROC曲线及其相关的性能指标AUC, EER, AP, mAP, F1-measure进行介绍。</p>","link":"pr-roc","tags":["AP","AUC","EER","F1-measure","PR","ROC","mAP","metric"],"categories":["machine-learning"]}]}