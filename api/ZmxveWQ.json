{"title":"Floyd 算法计算完全最短路径","date":"2019-10-21T19:39:45.000Z","link":"floyd","comments":true,"tags":["dynamic-programming","shortest-path"],"categories":["algorithm"],"updated":"2022-01-04T08:35:48.587Z","content":"<p>本文介绍使用 Floyd 算法求解完全最短路径。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"问题\">问题<a href=\"floyd#问题\"></a></h1><p><strong>完全最短路径问题(all-pairs shortest-paths problem)</strong>给定一个加权连通图，找到从每个顶点出发到其他所有顶点之间的最短距离(最短路径的长度)。</p>\n<p>为了方便起见，将最短路径的长度记录在一个称为距离矩阵的 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.395ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -576.1 600.5 721.6\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">n</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"0\" y=\"0\"/>\n</g>\n</svg> 阶矩阵中。我们要求的就是距离矩阵 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.924ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 828.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n</g>\n</svg>.</p>\n<p><strong>有向图：</strong></p>\n<p><img src=\"floyd/floyd2.png\" alt=\"floyd2\" class=\"article-img\"></p>\n<p><strong>对应的权重矩阵：</strong></p>\n<p style=\"text-align:center\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25.649ex\" height=\"12.509ex\" style=\"vertical-align: -5.671ex;\" viewbox=\"0 -2944.1 11043.1 5385.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">W = \n\\begin{bmatrix}\n0 &amp; \\infty &amp; 3 &amp; \\infty \\\\\n2 &amp; 0 &amp; \\infty &amp; \\infty \\\\\n\\infty &amp; 7 &amp; 0 &amp; 1 \\\\\n6 &amp; \\infty &amp; \\infty &amp; 0\n\\end{bmatrix}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-57\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-221E\" d=\"M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A2\" d=\"M319 0V602H403V0H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A5\" d=\"M263 0V602H347V0H263Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-57\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"1326\" y=\"0\"/>\n<g transform=\"translate(2382,0)\">\n<g transform=\"translate(0,2850)\">\n <use xlink:href=\"#E1-MJSZ4-23A1\" x=\"0\" y=\"-1155\"/>\n<g transform=\"translate(0,-3446.188741721854) scale(1,2.8112582781456954)\">\n <use xlink:href=\"#E1-MJSZ4-23A2\"/>\n</g>\n <use xlink:href=\"#E1-MJSZ4-23A3\" x=\"0\" y=\"-4555\"/>\n</g>\n<g transform=\"translate(834,0)\">\n<g transform=\"translate(-11,0)\">\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"250\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-32\" x=\"250\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-36\" x=\"250\" y=\"-2150\"/>\n</g>\n<g transform=\"translate(1990,0)\">\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"250\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-37\" x=\"250\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"-2150\"/>\n</g>\n<g transform=\"translate(3990,0)\">\n <use xlink:href=\"#E1-MJMAIN-33\" x=\"250\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"250\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"-2150\"/>\n</g>\n<g transform=\"translate(5991,0)\">\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-221E\" x=\"0\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"250\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"250\" y=\"-2150\"/>\n</g>\n</g>\n<g transform=\"translate(7993,2850)\">\n <use xlink:href=\"#E1-MJSZ4-23A4\" x=\"0\" y=\"-1155\"/>\n<g transform=\"translate(0,-3446.188741721854) scale(1,2.8112582781456954)\">\n <use xlink:href=\"#E1-MJSZ4-23A5\"/>\n</g>\n <use xlink:href=\"#E1-MJSZ4-23A6\" x=\"0\" y=\"-4555\"/>\n</g>\n</g>\n</g>\n</svg></p>\n<p><strong>对应的距离矩阵：</strong></p>\n<p style=\"text-align:center\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"21.655ex\" height=\"12.509ex\" style=\"vertical-align: -5.671ex;\" viewbox=\"0 -2944.1 9323.6 5385.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D =\n\\begin{bmatrix}\n0 &amp; 10 &amp; 3 &amp; 4 \\\\\n2 &amp; 0 &amp; 5 &amp; 6 \\\\\n7 &amp; 7 &amp; 0 &amp; 1 \\\\\n6 &amp; 16 &amp; 9 &amp; 0 \n\\end{bmatrix}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A2\" d=\"M319 0V602H403V0H319Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ4-23A5\" d=\"M263 0V602H347V0H263Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"1106\" y=\"0\"/>\n<g transform=\"translate(2162,0)\">\n<g transform=\"translate(0,2850)\">\n <use xlink:href=\"#E1-MJSZ4-23A1\" x=\"0\" y=\"-1155\"/>\n<g transform=\"translate(0,-3446.188741721854) scale(1,2.8112582781456954)\">\n <use xlink:href=\"#E1-MJSZ4-23A2\"/>\n</g>\n <use xlink:href=\"#E1-MJSZ4-23A3\" x=\"0\" y=\"-4555\"/>\n</g>\n<g transform=\"translate(834,0)\">\n<g transform=\"translate(-11,0)\">\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-32\" x=\"0\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-37\" x=\"0\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-36\" x=\"0\" y=\"-2150\"/>\n</g>\n<g transform=\"translate(1490,0)\">\n<g transform=\"translate(0,2050)\">\n <use xlink:href=\"#E1-MJMAIN-31\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"500\" y=\"0\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"250\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-37\" x=\"250\" y=\"-750\"/>\n<g transform=\"translate(0,-2150)\">\n <use xlink:href=\"#E1-MJMAIN-31\"/>\n <use xlink:href=\"#E1-MJMAIN-36\" x=\"500\" y=\"0\"/>\n</g>\n</g>\n<g transform=\"translate(3491,0)\">\n <use xlink:href=\"#E1-MJMAIN-33\" x=\"0\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-35\" x=\"0\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-39\" x=\"0\" y=\"-2150\"/>\n</g>\n<g transform=\"translate(4991,0)\">\n <use xlink:href=\"#E1-MJMAIN-34\" x=\"0\" y=\"2050\"/>\n <use xlink:href=\"#E1-MJMAIN-36\" x=\"0\" y=\"650\"/>\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"0\" y=\"-750\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"-2150\"/>\n</g>\n</g>\n<g transform=\"translate(6493,2850)\">\n <use xlink:href=\"#E1-MJSZ4-23A4\" x=\"0\" y=\"-1155\"/>\n<g transform=\"translate(0,-3446.188741721854) scale(1,2.8112582781456954)\">\n <use xlink:href=\"#E1-MJSZ4-23A5\"/>\n</g>\n <use xlink:href=\"#E1-MJSZ4-23A6\" x=\"0\" y=\"-4555\"/>\n</g>\n</g>\n</g>\n</svg></p>\n<h1 id=\"算法思想\">算法思想<a href=\"floyd#算法思想\"></a></h1><p>Floyd 算法和 Warshall的思想类似，通过对于图中的一个点，如果图中另外任意两个点不通过该点的距离比通过该点的距离大，则这两点的最短路径应该通过该点，由此可将距离迭代地缩小。</p>\n<p>Floyd 算法通过一系列 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.395ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -576.1 600.5 721.6\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">n</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"0\" y=\"0\"/>\n</g>\n</svg> 阶矩阵来计算距离矩阵。</p>\n<p style=\"text-align:center\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"21.415ex\" height=\"3.176ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -1078.4 9220.2 1367.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D^{(0)}, \\cdots , D^{(n-1)}, D^{(n)}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22EF\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,412)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-30\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"890\" y=\"0\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-2C\" x=\"1833\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-22EF\" x=\"2278\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-2C\" x=\"3617\" y=\"0\"/>\n<g transform=\"translate(4062,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,412)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6E\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2212\" x=\"989\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-31\" x=\"1768\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"2269\" y=\"0\"/>\n</g>\n</g>\n <use xlink:href=\"#E1-MJMAIN-2C\" x=\"6871\" y=\"0\"/>\n<g transform=\"translate(7316,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,412)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6E\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"989\" y=\"0\"/>\n</g>\n</g>\n</g>\n</svg></p>\n<p>其中，<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"4.258ex\" height=\"2.843ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -1078.4 1833.2 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D^{(0)}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,412)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-30\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"890\" y=\"0\"/>\n</g>\n</g>\n</svg> 即为有向图对应的权重矩阵，<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"4.422ex\" height=\"2.843ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -1078.4 1904 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D^{(n)}</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,412)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6E\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"989\" y=\"0\"/>\n</g>\n</g>\n</svg> 即为我们要求解的距离矩阵。</p>\n<p>矩阵间的关系如下：</p>\n<p style=\"text-align:center\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"39.804ex\" height=\"4.843ex\" style=\"vertical-align: -1.838ex;\" viewbox=\"0 -1293.7 17137.9 2085\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D_{ij}^{(k)} = \\min \\left(D_{ij}^{(k-1)}, \\quad D_{ik}^{(k-1)} + D_{kj}^{(k-1)} \\right)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6B\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6A\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-69\" d=\"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ2-28\" d=\"M180 96T180 250T205 541T266 770T353 944T444 1069T527 1150H555Q561 1144 561 1141Q561 1137 545 1120T504 1072T447 995T386 878T330 721T288 513T272 251Q272 133 280 56Q293 -87 326 -209T399 -405T475 -531T536 -609T561 -640Q561 -643 555 -649H527Q483 -612 443 -568T353 -443T266 -270T205 -41Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJSZ2-29\" d=\"M35 1138Q35 1150 51 1150H56H69Q113 1113 153 1069T243 944T330 771T391 541T416 250T391 -40T330 -270T243 -443T152 -568T69 -649H56Q43 -649 39 -647T35 -637Q65 -607 110 -548Q283 -316 316 56Q324 133 324 251Q324 368 316 445Q278 877 48 1123Q36 1137 35 1138Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,521)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"911\" y=\"0\"/>\n</g>\n<g transform=\"translate(828,-304)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-69\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6A\" x=\"345\" y=\"0\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"2125\" y=\"0\"/>\n<g transform=\"translate(3182,0)\">\n <use xlink:href=\"#E1-MJMAIN-6D\"/>\n <use xlink:href=\"#E1-MJMAIN-69\" x=\"833\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-6E\" x=\"1112\" y=\"0\"/>\n</g>\n<g transform=\"translate(5017,0)\">\n <use xlink:href=\"#E1-MJSZ2-28\"/>\n<g transform=\"translate(597,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,521)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2212\" x=\"911\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-31\" x=\"1689\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"2190\" y=\"0\"/>\n</g>\n<g transform=\"translate(828,-304)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-69\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6A\" x=\"345\" y=\"0\"/>\n</g>\n</g>\n <use xlink:href=\"#E1-MJMAIN-2C\" x=\"3349\" y=\"0\"/>\n<g transform=\"translate(4795,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,521)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2212\" x=\"911\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-31\" x=\"1689\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"2190\" y=\"0\"/>\n</g>\n<g transform=\"translate(828,-327)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-69\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"345\" y=\"0\"/>\n</g>\n</g>\n <use xlink:href=\"#E1-MJMAIN-2B\" x=\"7769\" y=\"0\"/>\n<g transform=\"translate(8770,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,521)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"389\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2212\" x=\"911\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-31\" x=\"1689\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-29\" x=\"2190\" y=\"0\"/>\n</g>\n<g transform=\"translate(828,-327)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6B\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6A\" x=\"521\" y=\"0\"/>\n</g>\n</g>\n <use xlink:href=\"#E1-MJSZ2-29\" x=\"11523\" y=\"-1\"/>\n</g>\n</g>\n</svg></p>\n<p>边界条件为：</p>\n<p style=\"text-align:center\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.561ex\" height=\"2.843ex\" style=\"vertical-align: -1.005ex;\" viewbox=\"0 -791.3 6269.4 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">D_{i0} = D_{0j} = 0</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-44\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6A\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,-150)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-69\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-30\" x=\"345\" y=\"0\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"1804\" y=\"0\"/>\n<g transform=\"translate(2860,0)\">\n <use xlink:href=\"#E1-MJMATHI-44\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(828,-150)\">\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-30\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMATHI-6A\" x=\"500\" y=\"0\"/>\n</g>\n</g>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"4712\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-30\" x=\"5768\" y=\"0\"/>\n</g>\n</svg></p>\n<p>利用动态规划即可求解。</p>\n<h1 id=\"代码实现\">代码实现<a href=\"floyd#代码实现\"></a></h1><h2 id=\"C-实现\">C++实现<a href=\"floyd#C-实现\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = <span class=\"number\">5000</span>;  <span class=\"comment\">// assume that this number is infinity and unreachable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Min</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b? b : a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Floyd Algorithm</span></span><br><span class=\"line\"><span class=\"comment\"> * to solve the completed shortest path problem</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * Args:</span></span><br><span class=\"line\"><span class=\"comment\"> *     src (int*): a source matrix of n x n, each element [i, j] is the weight from node i to node j,</span></span><br><span class=\"line\"><span class=\"comment\"> *                 if the element greater than or equal to inf, it means that node i and node is not connected directly.</span></span><br><span class=\"line\"><span class=\"comment\"> *     dst (int*): a destination matrix of n x n to store the shortest paths distances, </span></span><br><span class=\"line\"><span class=\"comment\"> *                 if dst is NULL, the result will be stored in the src</span></span><br><span class=\"line\"><span class=\"comment\"> *     n (int): the width and height of matrix src and dst</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Floyd</span><span class=\"params\">(<span class=\"keyword\">int</span>* src, <span class=\"keyword\">int</span>* dst, <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dst != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// copy the src to dst</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n * n; i++) &#123;</span><br><span class=\"line\">            dst[i] = src[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        dst = src;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// calcualte the shortest path distances</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                dst[i * n + j] = Min(dst[i * n + j], dst[i * n + k] + dst[k * n + j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> A[<span class=\"number\">4</span>][<span class=\"number\">4</span>] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>,   inf, <span class=\"number\">3</span>,   inf&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>,   <span class=\"number\">0</span>,   inf, inf&#125;,</span><br><span class=\"line\">        &#123;inf, <span class=\"number\">7</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>  &#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">6</span>,   inf, inf, <span class=\"number\">0</span>  &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> D[<span class=\"number\">4</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    Floyd(&amp;A[<span class=\"number\">0</span>][<span class=\"number\">0</span>], &amp;D[<span class=\"number\">0</span>][<span class=\"number\">0</span>], <span class=\"number\">4</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; D[i][j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Test();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n","prev":{"title":"背包问题动态规划求解","link":"bag-problem-dynamic-programming"},"next":{"title":"Warshall 算法求解传递闭包","link":"warshall"},"plink":"https://yuxinzhao.net/floyd/","toc":[{"title":"问题","id":"问题","index":"1"},{"title":"算法思想","id":"算法思想","index":"2"},{"title":"代码实现","id":"代码实现","index":"3","children":[{"title":"C++实现","id":"C-实现","index":"3.1"}]}],"reward":true,"copyright":{"author":"Yuxin Zhao","link":"<a href=\"https://yuxinzhao.net/floyd/\" title=\"Floyd 算法计算完全最短路径\">https://yuxinzhao.net/floyd/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}