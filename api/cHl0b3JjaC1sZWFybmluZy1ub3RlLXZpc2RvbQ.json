{"title":"[PyTorch学习笔记] PyTorch的可视化工具Visdom","date":"2019-07-28T13:53:15.000Z","thumbnail":"/static/image/pytorch.png","link":"pytorch-learning-note-visdom","comments":true,"tags":["pytorch","visdom"],"categories":["machine-learning"],"updated":"2022-01-04T08:35:48.631Z","content":"<p><strong>Visdom:</strong>一个灵活的可视化工具，可用来对于实时，富数据的创建，组织和共享。支持Torch和Numpy还有PyTorch。</p>\n<p><strong>visdom</strong> 可以实现<strong>远程</strong>数据的可视化，对科学实验有很大帮助。我们可以远程的发送图片和数据，并进行在ui界面显示出来，检查实验结果，或者debug。</p>\n<a id=\"more\"></a>\n\n\n\n<h2 id=\"安装与启动\">安装与启动<a href=\"pytorch-learning-note-visdom#安装与启动\"></a></h2><p><strong>安装</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> pip install visdom</span></span><br></pre></td></tr></table></div></figure>\n\n<p><strong>启动</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> python -m visdom.server</span></span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"接口\">接口<a href=\"pytorch-learning-note-visdom#接口\"></a></h2><p>大多数接口可以输入一个tensor(保存数据），和一个可选的tensor Y（标签或者时间戳）, 另外都可以指定窗口win,和汇出图添加到那个env上，另外options输入可以修改默认的绘图属性，输入参数基于表中键的匹配，有一些通用的options可以选择,下面列出了通用的可视化options(除了plot.image和plot.text外）</p>\n<ul>\n<li><code>opts.title</code> : figure title</li>\n<li><code>opts.width</code> : figure width</li>\n<li><code>opts.height</code> : figure height</li>\n<li><code>opts.showlegend</code> : show legend (<code>true</code> or <code>false</code>)</li>\n<li><code>opts.xtype</code> : type of x-axis (<code>&#39;linear&#39;</code> or <code>&#39;log&#39;</code>)</li>\n<li><code>opts.xlabel</code> : label of x-axis</li>\n<li><code>opts.xtick</code> : show ticks on x-axis (<code>boolean</code>)</li>\n<li><code>opts.xtickmin</code> : first tick on x-axis (<code>number</code>)</li>\n<li><code>opts.xtickmax</code> : last tick on x-axis (<code>number</code>)</li>\n<li><code>opts.xtickvals</code> : locations of ticks on x-axis (<code>table</code> of <code>number</code>s)</li>\n<li><code>opts.xticklabels</code> : ticks labels on x-axis (<code>table</code> of <code>string</code>s)</li>\n<li><code>opts.xtickstep</code> : distances between ticks on x-axis (<code>number</code>)</li>\n<li><code>opts.ytype</code> : type of y-axis (<code>&#39;linear&#39;</code> or <code>&#39;log&#39;</code>)</li>\n<li><code>opts.ylabel</code> : label of y-axis</li>\n<li><code>opts.ytick</code> : show ticks on y-axis (<code>boolean</code>)</li>\n<li><code>opts.ytickmin</code> : first tick on y-axis (<code>number</code>)</li>\n<li><code>opts.ytickmax</code> : last tick on y-axis (<code>number</code>)</li>\n<li><code>opts.ytickvals</code> : locations of ticks on y-axis (<code>table</code> of <code>number</code>s)</li>\n<li><code>opts.yticklabels</code> : ticks labels on y-axis (<code>table</code> of <code>string</code>s)</li>\n<li><code>opts.ytickstep</code> : distances between ticks on y-axis (<code>number</code>)</li>\n<li><code>opts.marginleft</code> : left margin (in pixels)</li>\n<li><code>opts.marginright</code> : right margin (in pixels)</li>\n<li><code>opts.margintop</code> : top margin (in pixels)</li>\n<li><code>opts.marginbottom</code>: bottom margin (in pixels)</li>\n</ul>\n<h2 id=\"使用\">使用<a href=\"pytorch-learning-note-visdom#使用\"></a></h2><h3 id=\"导入\">导入<a href=\"pytorch-learning-note-visdom#导入\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> visdom <span class=\"keyword\">import</span> Visdom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建一个连接客户端</span></span><br><span class=\"line\"><span class=\"comment\"># 指定env = u'test1'，默认端口为8097，host是‘localhost'</span></span><br><span class=\"line\">vis = visdom.Visdom(env=<span class=\"string\">\"test1\"</span>, use_incoming_socket=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"keyword\">assert</span> vis.check_connection()</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"曲线-vis-line\">曲线 <code>vis.line</code><a href=\"pytorch-learning-note-visdom#曲线-vis-line\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># win窗口名为 'sinx', 如果不指定回自动新分配一个pane，两次使用同一个win将覆盖</span></span><br><span class=\"line\"><span class=\"comment\"># 标题为 'y=sin(x)'</span></span><br><span class=\"line\"><span class=\"comment\"># visdom 支持pytorch的tensor 和 numpy的ndarray类型， 但不支持python的int,float等原生类型，需要转换成ndarray或者tensor</span></span><br><span class=\"line\">x = torch.arange(<span class=\"number\">1</span>, <span class=\"number\">30</span>, <span class=\"number\">0.01</span>)</span><br><span class=\"line\">y = torch.sin(x)</span><br><span class=\"line\">vis.line(X=x, Y=y, win=<span class=\"string\">'sinx'</span>, opts=&#123;<span class=\"string\">'title'</span>: <span class=\"string\">'y=sin(x)'</span>&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564294474491.png\" alt=\"1564294474491\" class=\"article-img\"></p>\n<p><strong>追加数据</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># append 追加数据</span></span><br><span class=\"line\"><span class=\"comment\"># y = x</span></span><br><span class=\"line\"><span class=\"comment\"># 窗口名: polynomial</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    x = torch.Tensor([i])  <span class=\"comment\"># 要转成tensor，Visdom不支持python原生的int,float等</span></span><br><span class=\"line\">    y = x</span><br><span class=\"line\">    vis.line(X=x, Y=y, win=<span class=\"string\">'polynomial'</span>, update=<span class=\"string\">'append'</span> <span class=\"keyword\">if</span> i&gt;<span class=\"number\">0</span> <span class=\"keyword\">else</span> <span class=\"literal\">None</span>)</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>在同一附图新增曲线，而不覆盖</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># update Trace 新增一条线，而不覆盖</span></span><br><span class=\"line\"><span class=\"comment\"># y= (x**2)/9</span></span><br><span class=\"line\"><span class=\"comment\"># 窗口名: polynomial</span></span><br><span class=\"line\">x = torch.arange(<span class=\"number\">0</span>, <span class=\"number\">9</span>, <span class=\"number\">0.1</span>)</span><br><span class=\"line\">y = (x ** <span class=\"number\">2</span>) / <span class=\"number\">9</span></span><br><span class=\"line\">vis.line(X=x, Y=y, win=<span class=\"string\">'polynomial'</span>, name=<span class=\"string\">'this is a new Trace'</span>, update=<span class=\"string\">'new'</span>)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564294705223.png\" alt=\"1564294705223\" class=\"article-img\"></p>\n<p><strong>附带label和对轴的控制</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># y = x**3</span></span><br><span class=\"line\">x = torch.arange(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0.05</span>)</span><br><span class=\"line\">y = x**<span class=\"number\">3</span></span><br><span class=\"line\">vis.line(</span><br><span class=\"line\">    X = x, </span><br><span class=\"line\">    Y = y, </span><br><span class=\"line\">    win = <span class=\"string\">'x3'</span>, </span><br><span class=\"line\">    opts = dict(</span><br><span class=\"line\">        title = <span class=\"string\">'x^3'</span>,</span><br><span class=\"line\">        legend = [<span class=\"string\">'y = x^3'</span>],</span><br><span class=\"line\">        xlabel = <span class=\"string\">'x dim'</span>,</span><br><span class=\"line\">        ylabel = <span class=\"string\">'y dim'</span>,</span><br><span class=\"line\">        xtickmin = <span class=\"number\">0</span>,</span><br><span class=\"line\">        xtickmax = <span class=\"number\">1</span>,</span><br><span class=\"line\">        ytickmin = <span class=\"number\">0</span>,</span><br><span class=\"line\">        ytickmax = <span class=\"number\">1</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564295944862.png\" alt=\"1564295944862\" class=\"article-img\"></p>\n<h3 id=\"图像-vis-image-vis-images\">图像 <code>vis.image / vis.images</code><a href=\"pytorch-learning-note-visdom#图像-vis-image-vis-images\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 图像 vis.image / vis.images</span></span><br><span class=\"line\"><span class=\"comment\"># image的画图功能可分为如下两类：</span></span><br><span class=\"line\"><span class=\"comment\"># image接收一个二维或三维向量，H x W 或 3 x H x W，前者是黑白图像，后者是彩色图像。</span></span><br><span class=\"line\"><span class=\"comment\"># images接收一个四维向量 N x C x H x W ，C可以是1或3，分别代表黑白和彩色图像。可实现类似torchvision中make_grid的功能，将多张图片拼接在一起。images也可以接收一个二维或三维的向量，此时它所实现的功能与image一致。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化一个随机的黑白图片</span></span><br><span class=\"line\">vis.image(torch.randn(<span class=\"number\">64</span>, <span class=\"number\">64</span>).numpy())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化一个随机的彩色图片</span></span><br><span class=\"line\">vis.image(torch.randn(<span class=\"number\">3</span>, <span class=\"number\">64</span>, <span class=\"number\">64</span>).numpy(), win=<span class=\"string\">'random2'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化36张随机彩色图片，每行6张</span></span><br><span class=\"line\">vis.images(torch.randn(<span class=\"number\">36</span>, <span class=\"number\">3</span>, <span class=\"number\">64</span>, <span class=\"number\">64</span>).numpy(), nrow=<span class=\"number\">6</span>, win=<span class=\"string\">'random3'</span>, opts=&#123;<span class=\"string\">'title'</span>: <span class=\"string\">'random images'</span>&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296112343.png\" alt=\"1564296112343\" class=\"article-img\"></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2 <span class=\"keyword\">as</span> cv </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># visdom 显示图像</span></span><br><span class=\"line\">img = cv.imread(<span class=\"string\">'e:/image/avator.jpg'</span>)    <span class=\"comment\"># H x W x C (BGR)</span></span><br><span class=\"line\">img = cv.cvtColor(img, cv.COLOR_BGR2RGB)  <span class=\"comment\"># H x W x C (RGB)</span></span><br><span class=\"line\">img = np.transpose(img, [<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>])        <span class=\"comment\"># C x H x H</span></span><br><span class=\"line\">vis.image(img, win=<span class=\"string\">'image_example'</span>)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296256444.png\" alt=\"1564296256444\" class=\"article-img\"></p>\n<h3 id=\"文本-vis-text\">文本 <code>vis.text</code><a href=\"pytorch-learning-note-visdom#文本-vis-text\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文本 vis.text</span></span><br><span class=\"line\"><span class=\"comment\"># 支持所有html标签</span></span><br><span class=\"line\">vis.text(<span class=\"string\">u''' &lt;h1&gt; Hello Visdom &lt;/h1&gt; &lt;br&gt; 测试 '''</span>,</span><br><span class=\"line\">        win=<span class=\"string\">'visdom'</span>,</span><br><span class=\"line\">        opts=&#123;<span class=\"string\">'title'</span>: <span class=\"string\">'visdom简介'</span>&#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296370982.png\" alt=\"1564296370982\" class=\"article-img\"></p>\n<h3 id=\"散点图（2D-3D）-vis-scatter\">散点图（2D/3D） <code>vis.scatter</code><a href=\"pytorch-learning-note-visdom#散点图（2D-3D）-vis-scatter\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 散点图 vis.scatter</span></span><br><span class=\"line\">x = torch.rand(<span class=\"number\">255</span>, <span class=\"number\">2</span>)          <span class=\"comment\"># [0, 1) 均匀分布</span></span><br><span class=\"line\">y = (torch.randn(<span class=\"number\">255</span>) &gt; <span class=\"number\">0</span>) + <span class=\"number\">1</span>  <span class=\"comment\"># 标准正太分布</span></span><br><span class=\"line\">vis.scatter(X=x, Y=y, win=<span class=\"string\">'scatter'</span>, opts=&#123;<span class=\"string\">'title'</span>: <span class=\"string\">'散点图'</span>, <span class=\"string\">'maskersize'</span>:<span class=\"number\">10</span>, <span class=\"string\">'legend'</span>:[<span class=\"string\">'men'</span>, <span class=\"string\">'women'</span>]&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296443526.png\" alt=\"1564296443526\" class=\"article-img\"></p>\n<h3 id=\"条形图-vis-bar\">条形图 <code>vis.bar</code><a href=\"pytorch-learning-note-visdom#条形图-vis-bar\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 条形图 bar</span></span><br><span class=\"line\">vis.bar(X=np.random.rand(<span class=\"number\">20</span>))</span><br><span class=\"line\">vis.bar(</span><br><span class=\"line\">    X = np.abs(np.random.rand(<span class=\"number\">5</span>, <span class=\"number\">3</span>)),</span><br><span class=\"line\">    opts = dict(</span><br><span class=\"line\">        stacked = <span class=\"literal\">True</span>,</span><br><span class=\"line\">        legend = [<span class=\"string\">'Facebook'</span>, <span class=\"string\">'Google'</span>, <span class=\"string\">'Twitter'</span>],</span><br><span class=\"line\">        rownames = [<span class=\"string\">'2012'</span>, <span class=\"string\">'2013'</span>, <span class=\"string\">'2014'</span>, <span class=\"string\">'2015'</span>, <span class=\"string\">'2016'</span>]</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\">vis.bar(</span><br><span class=\"line\">    X = np.random.rand(<span class=\"number\">20</span>, <span class=\"number\">3</span>),</span><br><span class=\"line\">    opts = dict(</span><br><span class=\"line\">        stacked = <span class=\"literal\">False</span>,</span><br><span class=\"line\">        legend = [<span class=\"string\">'The Netherlands'</span>, <span class=\"string\">'France'</span>, <span class=\"string\">'United States'</span>]</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296648484.png\" alt=\"1564296648484\" class=\"article-img\"></p>\n<h3 id=\"直方图-vis-histogram\">直方图 <code>vis.histogram</code><a href=\"pytorch-learning-note-visdom#直方图-vis-histogram\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 直方图 histogram (横坐标0-1（最大值与最小值之间）， 纵坐标频数)</span></span><br><span class=\"line\">vis.histogram(X=np.random.rand(<span class=\"number\">10000</span>), opts=dict(numbins=<span class=\"number\">20</span>, title=<span class=\"string\">'histogarm'</span>))</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296726597.png\" alt=\"1564296726597\" class=\"article-img\"></p>\n<h3 id=\"热程图-vis-heatmap\">热程图 <code>vis.heatmap</code><a href=\"pytorch-learning-note-visdom#热程图-vis-heatmap\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># heatmap</span></span><br><span class=\"line\">vis.heatmap(</span><br><span class=\"line\">    X=np.outer(np.arange(<span class=\"number\">1</span>, <span class=\"number\">6</span>), np.arange(<span class=\"number\">1</span>, <span class=\"number\">11</span>)),</span><br><span class=\"line\">    opts=dict(</span><br><span class=\"line\">        columnnames=[<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'e'</span>, <span class=\"string\">'f'</span>, <span class=\"string\">'g'</span>, <span class=\"string\">'h'</span>, <span class=\"string\">'i'</span>, <span class=\"string\">'j'</span>],</span><br><span class=\"line\">        rownames=[<span class=\"string\">'y1'</span>, <span class=\"string\">'y2'</span>, <span class=\"string\">'y3'</span>, <span class=\"string\">'y4'</span>, <span class=\"string\">'y5'</span>],</span><br><span class=\"line\">        colormap=<span class=\"string\">'Electric'</span>,</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296813690.png\" alt=\"1564296813690\" class=\"article-img\"></p>\n<h3 id=\"等值线图-vis-contour\">等值线图 <code>vis.contour</code><a href=\"pytorch-learning-note-visdom#等值线图-vis-contour\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 等值线图 contour</span></span><br><span class=\"line\">x = np.tile(np.arange(<span class=\"number\">1</span>, <span class=\"number\">101</span>), (<span class=\"number\">100</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">y = x.transpose()</span><br><span class=\"line\">X = np.exp((((x - <span class=\"number\">50</span>) ** <span class=\"number\">2</span>) + ((y - <span class=\"number\">50</span>) ** <span class=\"number\">2</span>)) / -(<span class=\"number\">20.0</span> ** <span class=\"number\">2</span>))</span><br><span class=\"line\">vis.contour(X=X, opts=dict(colormap=<span class=\"string\">'Viridis'</span>))</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564296966616.png\" alt=\"1564296966616\" class=\"article-img\"></p>\n<h3 id=\"表面图-vis-surf\">表面图 <code>vis.surf</code><a href=\"pytorch-learning-note-visdom#表面图-vis-surf\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 表面图 surface</span></span><br><span class=\"line\">vis.surf(X=X, opts=dict(colormap=<span class=\"string\">'Hot'</span>))</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564297154348.png\" alt=\"1564297154348\" class=\"article-img\"></p>\n<h3 id=\"视频-vis-video\">视频 <code>vis.video</code><a href=\"pytorch-learning-note-visdom#视频-vis-video\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 视频 video</span></span><br><span class=\"line\">videofile = <span class=\"string\">'e:/video/001.mp4'</span></span><br><span class=\"line\">vis.video(videofile=videofile, opts=&#123;<span class=\"string\">'width'</span>: <span class=\"number\">864</span>, <span class=\"string\">'height'</span>:<span class=\"number\">480</span>&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"pytorch-learning-note-visdom/1564297244983.png\" alt=\"1564297244983\" class=\"article-img\"></p>\n<h2 id=\"保存与读取\">保存与读取<a href=\"pytorch-learning-note-visdom#保存与读取\"></a></h2><p><strong>创建时指定保存文件路径</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vis = visdom.Visdom(env=<span class=\"string\">\"test1\"</span>, log_to_filename=<span class=\"string\">\"./log/test1.log\"</span>)</span><br></pre></td></tr></table></div></figure>\n\n<p><strong>读取时</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> visdom</span><br><span class=\"line\">visdom.Visdom().replay_log(<span class=\"string\">\"./log/test1.log\"</span>)</span><br></pre></td></tr></table></div></figure>\n\n","prev":{"title":"大整数乘法","link":"big-number-multiplication"},"next":{"title":"[PyTorch学习笔记] 数据的加载和预处理","link":"pytorch-learning-note-6"},"plink":"https://yuxinzhao.net/pytorch-learning-note-visdom/","toc":[{"title":"安装与启动","id":"安装与启动","index":"1"},{"title":"接口","id":"接口","index":"2"},{"title":"使用","id":"使用","index":"3","children":[{"title":"导入","id":"导入","index":"3.1"},{"title":"曲线 <code>vis.line</code>","id":"曲线-vis-line","index":"3.2"},{"title":"图像 <code>vis.image / vis.images</code>","id":"图像-vis-image-vis-images","index":"3.3"},{"title":"文本 <code>vis.text</code>","id":"文本-vis-text","index":"3.4"},{"title":"散点图（2D/3D） <code>vis.scatter</code>","id":"散点图（2D-3D）-vis-scatter","index":"3.5"},{"title":"条形图 <code>vis.bar</code>","id":"条形图-vis-bar","index":"3.6"},{"title":"直方图 <code>vis.histogram</code>","id":"直方图-vis-histogram","index":"3.7"},{"title":"热程图 <code>vis.heatmap</code>","id":"热程图-vis-heatmap","index":"3.8"},{"title":"等值线图 <code>vis.contour</code>","id":"等值线图-vis-contour","index":"3.9"},{"title":"表面图 <code>vis.surf</code>","id":"表面图-vis-surf","index":"3.10"},{"title":"视频 <code>vis.video</code>","id":"视频-vis-video","index":"3.11"}]},{"title":"保存与读取","id":"保存与读取","index":"4"}],"reward":true,"copyright":{"author":"Yuxin Zhao","link":"<a href=\"https://yuxinzhao.net/pytorch-learning-note-visdom/\" title=\"[PyTorch学习笔记] PyTorch的可视化工具Visdom\">https://yuxinzhao.net/pytorch-learning-note-visdom/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}