{"title":"使用UML顺序图表示物件交互及时序关系","date":"2019-10-24T19:13:36.000Z","link":"sequence-diagram","comments":true,"tags":["sequence-diagram","uml"],"updated":"2022-01-04T08:35:48.643Z","content":"<p>本文介绍UML顺序图(Sequence Diagram，又称时序图)表示物件间的交互以及时序关系。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"顺序图说明\">顺序图说明<a href=\"sequence-diagram#顺序图说明\"></a></h1><p>使用顺序图就是要清楚地传达各物件在时间轴上的交互情景，下面通过一张图来展示构成顺序图的所有物件有哪些，以及在各时间点彼此交互的情况。</p>\n<p><img src=\"sequence-diagram/Login.png\" alt=\"Login\" class=\"article-img\"></p>\n<ol>\n<li>参与者(Participants)：参与交互的物件，内文格式为 <code>名称 : 类别名称</code></li>\n<li>生命线(Lifeline)：表示交互发生的时间轴</li>\n<li>执行发起(Execution Occurrence)：描述生命线内某个执行单元</li>\n<li>讯息(Message)：呼叫目标物件的实际行为</li>\n<li>合并片段(Combined Fragment)：描述不同情况下可能发生的变化</li>\n<li>回传讯息(Reply Message)：非必须符号，因为执行发起的结束点就隐含此意了</li>\n</ol>\n<h1 id=\"范例\">范例<a href=\"sequence-diagram#范例\"></a></h1><p>假定这样一个场景：医院里，病患看病都是需要预约挂号的，最直接的就是跟经理约个时间，而经理通常回询问病患是否为初诊，如果是初诊就会要求病患填写基本资料，并且通过医院系统注册新病患的资料。接着就会询问要挂哪一位医生的门诊，所以需要通过医院系统来查询门诊是否额满，此时就会有两种情况，因此需要通过 alt 片段来区分不同情况下所发生的变化。当满诊的情况下，助理会将病患列入候补清单，若有其他病患退挂会主动通知（此流程于此不详述）；当该医生的门诊尚未额满时，助理会通过医院系统建立一张预约表，并且执行预约作业（输入病患及医生门诊信息），完成后会取得一组预约序号。最后整个流程结束后由助理回应病患此次预约挂号的处理结果。</p>\n<p><img src=\"sequence-diagram/%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7.svg\" alt=\"预约挂号\" class=\"article-img\"></p>\n<h1 id=\"组合片段类型\">组合片段类型<a href=\"sequence-diagram#组合片段类型\"></a></h1><p>在绘制顺序图时经常会使用到组合片段，且会因各种情景存在许多种类型，以下介绍一些比较常见的片段。</p>\n<h2 id=\"alt-互斥条件\"><code>alt</code> 互斥条件<a href=\"sequence-diagram#alt-互斥条件\"></a></h2><p><strong><code>alt</code>  (Alternatives)：互斥条件，任何情况只有一个序列发生</strong></p>\n<p>例：工程师有工作就用电脑写程序，否则就用电脑听音乐</p>\n<p><img src=\"sequence-diagram/SequenceDiagram1.svg\" alt=\"SequenceDiagram1\" class=\"article-img\"></p>\n<h2 id=\"opt-选择项\"><code>opt</code> 选择项<a href=\"sequence-diagram#opt-选择项\"></a></h2><p><strong><code>opt</code> (Option)：选择项，不一定会发生的序列（符合条件才会执行）</strong></p>\n<p>例：工程师遇到问题的时候会查询 stackoverflow 求解答</p>\n<p><img src=\"sequence-diagram/SequenceDiagram3.svg\" alt=\"SequenceDiagram3\" class=\"article-img\"></p>\n<h2 id=\"par-并行处理\"><code>par</code> 并行处理<a href=\"sequence-diagram#par-并行处理\"></a></h2><p><strong><code>par</code> (Parallel)：并行处理，片段中的事件并行执行</strong></p>\n<p>例：工程师用电脑边写程序边听音乐</p>\n<p><img src=\"sequence-diagram/SequenceDiagram2.svg\" alt=\"SequenceDiagram2\" class=\"article-img\"></p>\n<h2 id=\"loop-重复片段\"><code>loop</code> 重复片段<a href=\"sequence-diagram#loop-重复片段\"></a></h2><p><strong><code>loop</code> ：重复片段。可以设立重复的条件，若未设定最小级最大重复次数，默认表示无限制</strong></p>\n<p>例：工程师只要遇到问题，直接无尽无尽的使用电脑进行Google搜索，直到找到解决方案为止</p>\n<p><img src=\"sequence-diagram/SequenceDiagram4.svg\" alt=\"SequenceDiagram4\" class=\"article-img\"></p>\n<h2 id=\"ref-参考\"><code>ref</code> 参考<a href=\"sequence-diagram#ref-参考\"></a></h2><p><strong><code>ref</code> (Reference)：表示参考另一个交互顺序图，属于 Interaction Use 范畴</strong></p>\n<p>例：顾客在使用网站时都需要登录，而登录细节就此不再赘述（直接参考登录顺序图即可）</p>\n<p><img src=\"sequence-diagram/%E6%B5%8F%E8%A7%88%E8%B4%AD%E7%89%A9%E7%BD%91%E7%AB%99.svg\" alt=\"浏览购物网站\" class=\"article-img\"></p>\n<p>以下是被参考的 Login 交互顺序图，所有登录细节统一在这个顺序图中说明。</p>\n<p><img src=\"sequence-diagram/%E8%B4%AD%E7%89%A9%E7%BD%91%E7%AB%99Login.svg\" alt=\"购物网站Login\" class=\"article-img\"></p>\n<h1 id=\"参考资料\">参考资料<a href=\"sequence-diagram#参考资料\"></a></h1><ul>\n<li><p><a href=\"https://dotblogs.com.tw/wasichris/2016/03/17/232341\" target=\"_blank\" rel=\"noopener\">[UML] 使用循序圖傳達各物件互動及時序關係</a></p>\n</li>\n<li><p><a href=\"http://www.uml-diagrams.org/sequence-diagrams-combined-fragment.html\" target=\"_blank\" rel=\"noopener\">Combined Fragment</a></p>\n</li>\n</ul>\n","prev":{"title":"Windows上vim的安装与配置","link":"vim-for-windows"},"next":{"title":"背包问题动态规划求解","link":"bag-problem-dynamic-programming"},"plink":"https://yuxinzhao.net/sequence-diagram/","toc":[{"title":"顺序图说明","id":"顺序图说明","index":"1"},{"title":"范例","id":"范例","index":"2"},{"title":"组合片段类型","id":"组合片段类型","index":"3","children":[{"title":"<code>alt</code> 互斥条件","id":"alt-互斥条件","index":"3.1"},{"title":"<code>opt</code> 选择项","id":"opt-选择项","index":"3.2"},{"title":"<code>par</code> 并行处理","id":"par-并行处理","index":"3.3"},{"title":"<code>loop</code> 重复片段","id":"loop-重复片段","index":"3.4"},{"title":"<code>ref</code> 参考","id":"ref-参考","index":"3.5"}]},{"title":"参考资料","id":"参考资料","index":"4"}],"reward":true,"copyright":{"author":"Yuxin Zhao","link":"<a href=\"https://yuxinzhao.net/sequence-diagram/\" title=\"使用UML顺序图表示物件交互及时序关系\">https://yuxinzhao.net/sequence-diagram/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}